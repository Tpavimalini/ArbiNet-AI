import numpy as np
import pandas as pd
import pickle
from pypfopt.efficient_frontier import EfficientFrontier
from pypfopt.risk_models import risk_matrix
from pypfopt.expected_returns import mean_historical_return

# Load historical price data for DeFi assets
data = pd.read_csv("historical_defi_prices.csv")
returns = mean_historical_return(data)
risk = risk_matrix(data)

# Optimize portfolio allocation
ef = EfficientFrontier(returns, risk)
weights = ef.max_sharpe()
cleaned_weights = ef.clean_weights()

# Save trained model
with open("models/portfolio_allocation.pkl", "wb") as f:
    pickle.dump(cleaned_weights, f)
